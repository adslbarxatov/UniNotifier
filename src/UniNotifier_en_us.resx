<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CurlyTemplate" xml:space="preserve">
    <value>Remember to replace items enclosed in curly braces with what you want</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Delete the selected notification?</value>
  </data>
  <data name="KeywordNotSpecified" xml:space="preserve">
    <value>Search keyword is missing in “Beginning” field</value>
  </data>
  <data name="MainMenuOption02" xml:space="preserve">
    <value>&amp;Notifications settings</value>
  </data>
  <data name="NotEnoughDataMessage" xml:space="preserve">
    <value>One of required fields is empty, or link to website is specified incorrectly</value>
  </data>
  <data name="NotMatchingNames" xml:space="preserve">
    <value>Notification with the same name already exists. The name has been adjusted</value>
  </data>
  <data name="SearchFailure" xml:space="preserve">
    <value>Link to a webpage is incorrect or keyword is not found on this page</value>
  </data>
  <data name="UNNotSettingsForm_NameLabel" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="UNNotSettingsForm_LinkLabel" xml:space="preserve">
    <value>URL:</value>
  </data>
  <data name="UNNotSettingsForm_BeginningLabel" xml:space="preserve">
    <value>Beginning:</value>
  </data>
  <data name="UNNotSettingsForm_EndingLabel" xml:space="preserve">
    <value>Ending:</value>
  </data>
  <data name="UNNotSettingsForm_FrequencyLabel" xml:space="preserve">
    <value>Update frequency, minutes:</value>
  </data>
  <data name="UpdateLineNotSpecified" xml:space="preserve">
    <value>Notification for updating is not selected</value>
  </data>
  <data name="UpdateMessage" xml:space="preserve">
    <value>Update selected notification?</value>
  </data>
  <data name="UNNotSettingsForm_OccurrenceLabel" xml:space="preserve">
    <value>Occurrence number:</value>
  </data>
  <data name="Tip_0001" xml:space="preserve">
    <value>Welcome to UniNotifier, the web resources supervisor service! Here you can configure the service and notifications. Some buttons and fields contain useful tips that will be shown once.

Detailed instructions for setting up the service are available on YouTube (“User guide” button in the app info window)</value>
  </data>
  <data name="Tip_0010" xml:space="preserve">
    <value>This button allows you to load settings from notification template</value>
  </data>
  <data name="Tip_0020" xml:space="preserve">
    <value>This button allows you to automatically find delimiters for the new notification (see user manual for details)</value>
  </data>
  <data name="Tip_0040" xml:space="preserve">
    <value>This section allows you to select the notification, the source of which will be opened in browser</value>
  </data>
  <data name="Tip_0080" xml:space="preserve">
    <value>This field allows you to select notification for configuring</value>
  </data>
  <data name="Tip_0100" xml:space="preserve">
    <value>When you'll close this window, the background service will start and begin monitoring. When you call settings interface again, the service will be paused for its correct configuration</value>
  </data>
  <data name="Tip_0200" xml:space="preserve">
    <value>In some cases, the needed part of web page is not the first on it, which is limited by the specified markers. This field allows you to specify which occurrence of the target area (from the top of page) should be displayed</value>
  </data>
  <data name="NoTemplateInClipboard" xml:space="preserve">
    <value>No compatible notification templates found in the clipboard. Copy template string to clipboard and try again</value>
  </data>
  <data name="Tip_0400" xml:space="preserve">
    <value>This button allows you to share settings of configured notifications</value>
  </data>
  <data name="Tip_0800" xml:space="preserve">
    <value>This button allows you to load shared or saved settings</value>
  </data>
  <data name="WizardFailure" xml:space="preserve">
    <value>It looks like this site is not supported. Try using a different keyword</value>
  </data>
  <data name="WizardSearch1" xml:space="preserve">
    <value>Detecting markers...</value>
  </data>
  <data name="WizardSearch2" xml:space="preserve">
    <value>Requesting text...</value>
  </data>
  <data name="WizardStep1" xml:space="preserve">
    <value>Welcome to the notifications wizard!

This function will help you to create a notification (“watchdog”) for web resource.

First, enter the link (URL) of the website you want to watch</value>
  </data>
  <data name="WizardStep2" xml:space="preserve">
    <value>Now enter a keyword.

This word (or phrase) should be present right now in a part of the website you want to watch, and you expect it to change over time. The ideal would be a phrase that is present now only in this area or is first encountered on the website in it. The case of letters doesn’t matter</value>
  </data>
  <data name="WizardStep3" xml:space="preserve">
    <value>For the specified settings, the text below is received. If it meets your expectations, click OK to add the notification. Otherwise, click Retry and we’ll try again</value>
  </data>
  <data name="WizardStep4" xml:space="preserve">
    <value>For the specified settings, the text below is received. If it meets your expectations, click OK to add the notification. Otherwise, retry the action and try a different keyword</value>
  </data>
  <data name="WizardStep5" xml:space="preserve">
    <value>It’s ready! Now specify the name of notification to be displayed in the main log</value>
  </data>
  <data name="WizardForm_WizardRadio" xml:space="preserve">
    <value>Using &amp;wizard</value>
  </data>
  <data name="WizardForm_ClipboardRadio" xml:space="preserve">
    <value>From clip&amp;board</value>
  </data>
  <data name="WizardForm_TemplateRadio" xml:space="preserve">
    <value>From &amp;template</value>
  </data>
  <data name="TemplateSelect" xml:space="preserve">
    <value>Create new notification:</value>
  </data>
  <data name="UNNotSettingsForm_ComparatorFlag" xml:space="preserve">
    <value>Check the first number in text and show urgent notification if it is</value>
  </data>
  <data name="UNNotSettingsForm_MisfitsFlag" xml:space="preserve">
    <value>Don’t show non-urgent</value>
  </data>
  <data name="UNGenSettingsForm_WindowCallFlag" xml:space="preserve">
    <value>Show main window on urgent notifications</value>
  </data>
  <data name="Tip_1000" xml:space="preserve">
    <value>This function allows you to set a numerical threshold. It will be compared with the first number in every obtained text using the specified comparison method. If the new text matches the condition, app will display a special warning.

It is also possible to display a notification only if this condition is met</value>
  </data>
  <data name="UNNotSettingsForm_CheckAvailability" xml:space="preserve">
    <value>Notify if the source is unavailable</value>
  </data>
  <data name="RecallAllNews" xml:space="preserve">
    <value>Re-request all notifications to check settings?</value>
  </data>
  <data name="ShareVariant" xml:space="preserve">
    <value>How do you want to share configured notifications?

• Click “To file” to save all settings to the file;
• Click “To clipboard” to send settings of the current notification to the clipboard</value>
  </data>
  <data name="LoadingWarning" xml:space="preserve">
    <value>WARNING: this option will overwrite all existing settings. Continue?</value>
  </data>
  <data name="WizardForm_FileRadio" xml:space="preserve">
    <value>From &amp;file</value>
  </data>
  <data name="ShareClipboard" xml:space="preserve">
    <value>To clip&amp;board</value>
  </data>
  <data name="ShareFile" xml:space="preserve">
    <value>To &amp;file</value>
  </data>
  <data name="undfile" xml:space="preserve">
    <value>Settings exchange file for uNot service</value>
  </data>
  <data name="ComparatorTypes" xml:space="preserve">
    <value>greater than
greater than or equal to
less than
less than or equal to
equal to
not equal to
contains
doesn’t contain</value>
  </data>
  <data name="NotAddedMessage" xml:space="preserve">
    <value>Notification has been added:
</value>
  </data>
  <data name="NotRemovedMessage" xml:space="preserve">
    <value>Notification has been removed</value>
  </data>
  <data name="NotUpdatedMessage" xml:space="preserve">
    <value>Notification has been updated:
</value>
  </data>
  <data name="UNGenSettingsForm_UrgentSigLabel" xml:space="preserve">
    <value>Generate urgent notification for the following characters:</value>
  </data>
  <data name="FontLabel" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="DisableContextMenu" xml:space="preserve">
    <value>Disable notification</value>
  </data>
  <data name="SetupContextMenu" xml:space="preserve">
    <value>Setup notification...</value>
  </data>
  <data name="DeleteContextMenu" xml:space="preserve">
    <value>Remove from log</value>
  </data>
  <data name="TransculentContextMenu" xml:space="preserve">
    <value>Transculent log items</value>
  </data>
  <data name="UNNotSettingsForm_EnabledCheck" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="UNGenSettingsForm_NotificationsSection" xml:space="preserve">
    <value>Notifications settings</value>
  </data>
  <data name="UNGenSettingsForm_GeneralSection" xml:space="preserve">
    <value>General settings</value>
  </data>
  <data name="UNGenSettingsForm_LogColorLabel" xml:space="preserve">
    <value>Log color theme:</value>
  </data>
  <data name="UNGenSettingsForm_TranslucencyField" xml:space="preserve">
    <value>Translucent log items</value>
  </data>
  <data name="UNGenSettingsForm_FontSizeLabel" xml:space="preserve">
    <value>Log font size:</value>
  </data>
  <data name="NotMenu_Setup" xml:space="preserve">
    <value>Setup...</value>
  </data>
  <data name="NotMenu_AddCopy" xml:space="preserve">
    <value>Copy to new item</value>
  </data>
  <data name="NotMenu_Share" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="NotMenu_AddWizard" xml:space="preserve">
    <value>Notifications wizard</value>
  </data>
  <data name="ManualDelimitersForm_PageLabel" xml:space="preserve">
    <value>Markup of the target webpage:</value>
  </data>
  <data name="WizardForm_ManualRadio" xml:space="preserve">
    <value>Manual markup selection</value>
  </data>
  <data name="HtmlSearchRequest" xml:space="preserve">
    <value>Enter a word to search</value>
  </data>
  <data name="HtmlNotFound" xml:space="preserve">
    <value>Cannot find the specified word</value>
  </data>
  <data name="AutoscrollFlag" xml:space="preserve">
    <value>Autoscroll</value>
  </data>
</root>