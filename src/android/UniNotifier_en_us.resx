<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutPage" xml:space="preserve">
    <value>About application</value>
  </data>
  <data name="AcceptButton" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="ActionIsUnsupported" xml:space="preserve">
    <value>Action is unsupported for this type of notifications</value>
  </data>
  <data name="AddAsNewMessage" xml:space="preserve">
    <value>Added new notification: </value>
  </data>
  <data name="ADPPage" xml:space="preserve">
    <value>Policy and EULA</value>
  </data>
  <data name="AlarmSettingsLabel" xml:space="preserve">
    <value>Allow:</value>
  </data>
  <data name="AllNewsButton" xml:space="preserve">
    <value>ALL</value>
  </data>
  <data name="AllNewsRequest" xml:space="preserve">
    <value>This option will poll all notifications with 5 seconds steps. It may take some time. Continue?</value>
  </data>
  <data name="AllowLightLabel" xml:space="preserve">
    <value>Light indication</value>
  </data>
  <data name="AllowSoundLabel" xml:space="preserve">
    <value>Sound alerts</value>
  </data>
  <data name="AllowStartLabel" xml:space="preserve">
    <value>Keep service active after exit</value>
  </data>
  <data name="AllowVibroLabel" xml:space="preserve">
    <value>Vibration</value>
  </data>
  <data name="ApplyMessage" xml:space="preserve">
    <value>Notification updated: </value>
  </data>
  <data name="AppPage" xml:space="preserve">
    <value>App webpage</value>
  </data>
  <data name="BackgroundRequestInProgress" xml:space="preserve">
    <value>Please wait for the remaining notifications to respond...</value>
  </data>
  <data name="BackgroundRequestOff" xml:space="preserve">
    <value>Background request: off</value>
  </data>
  <data name="BackgroundRequestOn" xml:space="preserve">
    <value>Background request step: {0:D} minutes</value>
  </data>
  <data name="BeginningFieldLabel" xml:space="preserve">
    <value>Beginning:</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CommunitySelect" xml:space="preserve">
    <value>Select community:</value>
  </data>
  <data name="CommunityTG" xml:space="preserve">
    <value>Telegram feed</value>
  </data>
  <data name="CommunityVK" xml:space="preserve">
    <value>Main community</value>
  </data>
  <data name="CurlyTemplate" xml:space="preserve">
    <value>Remember to replace items enclosed in curly braces (including parts of webpage's link) with what you want</value>
  </data>
  <data name="DeclineButton" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Delete selected notification?</value>
  </data>
  <data name="DevPage" xml:space="preserve">
    <value>Ask developer</value>
  </data>
  <data name="DisableOption" xml:space="preserve">
    <value>Disable the notification</value>
  </data>
  <data name="EarlierMessage" xml:space="preserve">
    <value> Earlier </value>
  </data>
  <data name="EFTAccepted" xml:space="preserve">
    <value>***</value>
  </data>
  <data name="EFTLabel" xml:space="preserve">
    <value>Extended functionality token:</value>
  </data>
  <data name="EmailsAreUnavailable" xml:space="preserve">
    <value>This device has no mail agent</value>
  </data>
  <data name="EnabledLabel" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="EndingFieldLabel" xml:space="preserve">
    <value>Ending:</value>
  </data>
  <data name="FindDisclaimer" xml:space="preserve">
    <value>For using this function specify some keyword from needed site's area in “Beginning” field</value>
  </data>
  <data name="FontSizeLabel" xml:space="preserve">
    <value>Font size: </value>
  </data>
  <data name="GMJButton" xml:space="preserve">
    <value>GMJ</value>
  </data>
  <data name="GoToOption" xml:space="preserve">
    <value>Go to the webpage</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>Interface language:</value>
  </data>
  <data name="LaunchMessage" xml:space="preserve">
    <value>Notification service is in standby mode. Click on this message to go to the main log</value>
  </data>
  <data name="LinkFieldLabel" xml:space="preserve">
    <value>Link:</value>
  </data>
  <data name="LinkFieldPlaceholder" xml:space="preserve">
    <value>(URL)</value>
  </data>
  <data name="LogPage" xml:space="preserve">
    <value>Notifications log</value>
  </data>
  <data name="LogSettingsLabel" xml:space="preserve">
    <value>Log settings:</value>
  </data>
  <data name="MainLogPlaceholder" xml:space="preserve">
    <value>(no notifications yet)</value>
  </data>
  <data name="ManualPage" xml:space="preserve">
    <value>User manual</value>
  </data>
  <data name="NameFieldLabel" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="NameFieldPlaceholder" xml:space="preserve">
    <value>(name)</value>
  </data>
  <data name="NewItemsMessage" xml:space="preserve">
    <value>New notifications: {0:D}. Click this message to read them</value>
  </data>
  <data name="NextButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="NextNewsButton" xml:space="preserve">
    <value>Next item</value>
  </data>
  <data name="NoTemplateInClipboard" xml:space="preserve">
    <value>No compatible notification templates found in the clipboard. Copy template string to clipboard and try again</value>
  </data>
  <data name="NotEnoughDataMessage" xml:space="preserve">
    <value>One of required fields is empty, or link to website is specified incorrectly</value>
  </data>
  <data name="NotificationButton" xml:space="preserve">
    <value>Go to</value>
  </data>
  <data name="NotificationsSettingsLabel" xml:space="preserve">
    <value>Notifications parameters:</value>
  </data>
  <data name="NotificationsWizard" xml:space="preserve">
    <value>Using wizard</value>
  </data>
  <data name="NotMatchingNames" xml:space="preserve">
    <value>Notification with the same name already added</value>
  </data>
  <data name="NotSettingsPage" xml:space="preserve">
    <value>Notifications settings</value>
  </data>
  <data name="NotWizardButton" xml:space="preserve">
    <value>Notifications wizard</value>
  </data>
  <data name="NotWizardLabel" xml:space="preserve">
    <value>Creating new notifications:</value>
  </data>
  <data name="OccFieldLabel" xml:space="preserve">
    <value>Occurrence #{0:D}</value>
  </data>
  <data name="OtherOption" xml:space="preserve">
    <value>More...</value>
  </data>
  <data name="PolicyMessage" xml:space="preserve">
    <value>Before you can start using this tool, you must accept Application development policy and EULA. Do you want to open them in browser?

• Click “Accept” if you are already familiar and fully accepted them;
• Click “Read” if you want to open them in browser;
• To decline them, close the application</value>
  </data>
  <data name="ReadModeLabel" xml:space="preserve">
    <value>Read mode</value>
  </data>
  <data name="RemoveOption" xml:space="preserve">
    <value>Remove from log</value>
  </data>
  <data name="RequestAgainOption" xml:space="preserve">
    <value>Request again</value>
  </data>
  <data name="RequestAllStarted" xml:space="preserve">
    <value>Requesting all news...</value>
  </data>
  <data name="RequestCompleted" xml:space="preserve">
    <value>All available news received</value>
  </data>
  <data name="RequestFailed" xml:space="preserve">
    <value>News not found. Try again for checking next 5 notifications</value>
  </data>
  <data name="RequestStarted" xml:space="preserve">
    <value>Requesting news item...</value>
  </data>
  <data name="RestartApp" xml:space="preserve">
    <value>Restart the application</value>
  </data>
  <data name="RetryButton" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="RightAlignmentLabel" xml:space="preserve">
    <value>Right buttons</value>
  </data>
  <data name="SearchFailure" xml:space="preserve">
    <value>Link to webpage is incorrect or keyword is not found on this page</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select language:</value>
  </data>
  <data name="SelectNotification" xml:space="preserve">
    <value>Select notification:</value>
  </data>
  <data name="SelectOption" xml:space="preserve">
    <value>Select option:</value>
  </data>
  <data name="SelectTemplate" xml:space="preserve">
    <value>Select template:</value>
  </data>
  <data name="ServiceSettingsLabel" xml:space="preserve">
    <value>Background service:</value>
  </data>
  <data name="SettingsPage" xml:space="preserve">
    <value>Application settings</value>
  </data>
  <data name="ShareOption" xml:space="preserve">
    <value>Share text</value>
  </data>
  <data name="SpecialNotificationsSwitch" xml:space="preserve">
    <value>Enable special notifications</value>
  </data>
  <data name="TemplateClipboard" xml:space="preserve">
    <value>From clipboard</value>
  </data>
  <data name="TemplateList" xml:space="preserve">
    <value>From template</value>
  </data>
  <data name="TemplateSelect" xml:space="preserve">
    <value>Create new notification:</value>
  </data>
  <data name="Tip01" xml:space="preserve">
    <value>Welcome to UniNotifier!

• On this page you can configure the notifications.
• Swipe it to the right to set up parameters of the news service</value>
  </data>
  <data name="Tip02" xml:space="preserve">
    <value>• Detailed instructions for setting up the service are available on YouTube. Swipe this screen to the left and select the user guide.
• The main notifications log is available on the first page of application. It will be opened on every further start of UniNotifier</value>
  </data>
  <data name="Tip03_1" xml:space="preserve">
    <value>Warning! Some devices are requiring manual unlocking of internet access (f.e., in case of internet traffic saving mode) for the app. Check it if you will not get notifications</value>
  </data>
  <data name="Tip03_2" xml:space="preserve">
    <value>.

Also, your device requires manual permission for sounds, lights and vibration for notifications. Select them in the system settings if necessary</value>
  </data>
  <data name="Tip04_1" xml:space="preserve">
    <value>This button allows you to apply changes performed below to the currently selected notification</value>
  </data>
  <data name="Tip04_10" xml:space="preserve">
    <value>This option allows you to open the source of selected notification in browser</value>
  </data>
  <data name="Tip04_11" xml:space="preserve">
    <value>This button allows you to select notification for configuring</value>
  </data>
  <data name="Tip04_13" xml:space="preserve">
    <value>If this switch is enabled, the background service will remain active when the app is closed or minimized. This allows you to quickly call the app when necessary (via a pinned notification) and see the quantity of unread news</value>
  </data>
  <data name="Tip04_15" xml:space="preserve">
    <value>In some cases, the needed part of web page is not the first on it, which is limited by the specified markers. This field allows you to specify which occurrence of the target area (from the top of page) should be displayed</value>
  </data>
  <data name="Tip04_18" xml:space="preserve">
    <value>All operations with texts of notifications are now available through the clicking on them right in the main log</value>
  </data>
  <data name="Tip04_19" xml:space="preserve">
    <value>These switches allow you to specify which methods of indication the app should use when there is unread news</value>
  </data>
  <data name="Tip04_2" xml:space="preserve">
    <value>This button allows you to share settings of the current notification</value>
  </data>
  <data name="Tip04_3" xml:space="preserve">
    <value>This button allows you to add new notification with settings presented above</value>
  </data>
  <data name="Tip04_4" xml:space="preserve">
    <value>This button allows you to remove selected notification</value>
  </data>
  <data name="Tip04_7" xml:space="preserve">
    <value>This option allows you to share the text of selected notification.

Please note that app adds links to information sources to notifications you share (in order to respect the rights of authors). It is recommended not to remove them when distributing texts using this function</value>
  </data>
  <data name="TipHeader01" xml:space="preserve">
    <value>Tip</value>
  </data>
  <data name="UpdateTemplates" xml:space="preserve">
    <value>Update notification templates</value>
  </data>
  <data name="UpdatingTemplates" xml:space="preserve">
    <value>Updating of notification templates...</value>
  </data>
  <data name="UpdatingTemplatesCompleted" xml:space="preserve">
    <value>Updating of templates completed...</value>
  </data>
  <data name="WebIsUnavailable" xml:space="preserve">
    <value>This device has no web browser</value>
  </data>
  <data name="WizardFailure" xml:space="preserve">
    <value>It looks like this site is not supported in UniNotifier. Try using a different keyword</value>
  </data>
  <data name="WizardSearch1" xml:space="preserve">
    <value>Detecting markers...</value>
  </data>
  <data name="WizardSearch2" xml:space="preserve">
    <value>Requesting text...</value>
  </data>
  <data name="WizardStep1" xml:space="preserve">
    <value>Welcome to the notifications wizard!

This function will help you to create a notification that UniNotifier can automatically poll.

First, enter a link (URL) to the site from which you want to receive notifications</value>
  </data>
  <data name="WizardStep2" xml:space="preserve">
    <value>Now enter a keyword.

This word (or phrase) should be present right now in that part of the site that will change over time, which will be the source of text for notifications. The ideal would be a phrase that is present now only in this area or is first encountered on the site in it. The case of letters doesn’t matter</value>
  </data>
  <data name="WizardStep3" xml:space="preserve">
    <value>For the specified settings, the text below is received. If it meets your expectations, click OK to add the notification. Otherwise, click Retry and we'll try again</value>
  </data>
  <data name="WizardStep4" xml:space="preserve">
    <value>For the specified settings, the text below is received. If it meets your expectations, click OK to add the notification. Otherwise, cancel the action and try a different keyword</value>
  </data>
  <data name="WizardStep5" xml:space="preserve">
    <value>It’s ready! Now specify the name of notification to be displayed in the main log</value>
  </data>
</root>